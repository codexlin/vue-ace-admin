@use 'sass:map';
@import './variables.module';

// 定义字体

@font-face {
  font-family: Lato;
  font-style: normal;

  /* 可以包括更多字体格式和字体描述 */

  font-weight: normal;
  src: url('https://cdn.jsdelivr.net/gh/codexlin/jsDelivr/assets/fonts/Lato-Regular.ttf');
}

$font-family:
  'Lato',
  -apple-system,
  'Microsoft YaHei',
  'sans-serif';

// 定义不同的模式和主题
$modes: (
  light: (
    // 亮模式背景颜色
    bgColor: #fff,
    // 亮模式信息颜色
    infoColor: #141414
  ),
  dark: (
    bgColor: #141414,
    infoColor: #f6f8fa
  )
);

// 用户自定义颜色
$custom-colors: (
  primary: $primary,
  info: $info
);

// 设置当前模式和主题
$curMode: light;

// 函数用于获取当前模式的变量值

@function get-mode-var($key) {
  $modeMap: map.get($modes, $curMode);

  @return map.get($modeMap, $key);
}

// 函数用于获取当前主题的颜色值

@function get-color($key) {
  @return map.get($custom-colors, $key);
}

// 混合用于应用主题样式

@mixin use-theme() {
  @each $key1, $value1 in $modes {
    $curMode: $key1 !global;
    html[data-theme='#{$key1}'] & {
      @content;
    }
  }
}

// 定义断点 map
$breakpoints: (
  '2xl': 1536px,
  'xl': 1280px,
  'lg': 1024px,
  'md': 768px,
  'sm': 640px,
  'xs': 475px
);

// 使用 mixin 和 map
@mixin respond-to($breakpoint) {
  $value: map.get($breakpoints, $breakpoint);

  @if $value {
    @media (max-width: $value) {
      @content;
    }
  }
}
